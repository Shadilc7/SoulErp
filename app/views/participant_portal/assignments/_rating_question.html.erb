<div class="rating-question rating-stars-container">
  <% max_rating = question.max_rating || 5 %>
  <div class="star-rating" data-max="<%= max_rating %>">
    <% (1..max_rating).each do |i| %>
      <input type="radio" 
             id="star<%= i %>_<%= question.id %>" 
             name="responses[<%= question.id %>][answer]" 
             value="<%= i %>" 
             <%= 'required' if question.required? %>
             data-action="change->assignment-form#validateField"
             data-question-id="<%= question.id %>"
             style="position: absolute !important; opacity: 0 !important; width: 0 !important; height: 0 !important; visibility: hidden !important; pointer-events: none !important; display: none !important;">
      <label for="star<%= i %>_<%= question.id %>" title="<%= i %> <%= i == 1 ? 'star' : 'stars' %>" style="background: transparent !important; border: none !important; padding: 0 !important; margin: 0 !important;">
        <i class="bi bi-star" style="font-size: 2rem; color: #ddd;"></i>
      </label>
    <% end %>
  </div>
  
  <% if question.required? %>
    <div class="invalid-feedback" data-assignment-form-target="error" data-question-id="<%= question.id %>">
      Please select a rating
    </div>
  <% end %>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const container = document.querySelector('.star-rating[data-max="<%= max_rating %>"]');
      const inputs = container.querySelectorAll('input[type="radio"]');
      const labels = container.querySelectorAll('label');
      
      // Hide all radio buttons
      inputs.forEach(input => {
        input.style.position = 'absolute';
        input.style.opacity = '0';
        input.style.width = '0';
        input.style.height = '0';
        input.style.visibility = 'hidden';
        input.style.pointerEvents = 'none';
        input.style.display = 'none';
      });
      
      // Add click event to each label
      labels.forEach(label => {
        label.addEventListener('click', function(e) {
          e.preventDefault();
          const input = document.getElementById(this.getAttribute('for'));
          if (input) {
            input.checked = true;
            
            // Update all stars
            const starValue = parseInt(input.value);
            labels.forEach(l => {
              const icon = l.querySelector('i');
              const starNum = parseInt(l.getAttribute('for').split('_')[0].replace('star', ''));
              
              if (starNum <= starValue) {
                icon.classList.remove('bi-star');
                icon.classList.add('bi-star-fill');
                icon.style.color = '#FFD700';
              } else {
                icon.classList.remove('bi-star-fill');
                icon.classList.add('bi-star');
                icon.style.color = '#ddd';
              }
            });
          }
        });
      });
      
      // Add hover effects
      container.addEventListener('mouseover', function(e) {
        if (e.target.tagName === 'I' || e.target.tagName === 'LABEL') {
          const label = e.target.tagName === 'I' ? e.target.parentNode : e.target;
          const value = parseInt(label.getAttribute('for').split('_')[0].replace('star', ''));
          
          labels.forEach(l => {
            const icon = l.querySelector('i');
            const starNum = parseInt(l.getAttribute('for').split('_')[0].replace('star', ''));
            
            if (starNum <= value) {
              icon.classList.remove('bi-star');
              icon.classList.add('bi-star-fill');
              icon.style.color = '#FFD700';
            } else {
              icon.classList.remove('bi-star-fill');
              icon.classList.add('bi-star');
              icon.style.color = '#ddd';
            }
          });
        }
      });
      
      // Remove hover effect when leaving the container
      container.addEventListener('mouseleave', function() {
        const selectedInput = Array.from(inputs).find(input => input.checked);
        const selectedValue = selectedInput ? parseInt(selectedInput.value) : 0;
        
        labels.forEach(l => {
          const icon = l.querySelector('i');
          const starNum = parseInt(l.getAttribute('for').split('_')[0].replace('star', ''));
          
          if (starNum <= selectedValue) {
            icon.classList.remove('bi-star');
            icon.classList.add('bi-star-fill');
            icon.style.color = '#FFD700';
          } else {
            icon.classList.remove('bi-star-fill');
            icon.classList.add('bi-star');
            icon.style.color = '#ddd';
          }
        });
      });
    });
  </script>
</div> 